/**
 * Module Dependencies
 */

var app = require('../app')
var debug = require('debug')('post-web-service:server')
var http = require('http')

/**
 * Get port form environment and store in Express
 */
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port)

/** 
 * Create HTTP Server.
 */
var server = http.createServer(app);

/**
 * Listen on provided port into a number, string, or false
 */
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val){
    var port = parseInt(val, 10);

    if(isNaN(port)){
        // named pipe
        return val;
    }

    if(port >= 0){
        // port number
        return port;
    }

    return false;
}

/**
 * Event Listener for HTTP server "error" event
 */
function onError(error){
    if(error.syscall !== 'listen'){
        throw error;
    }

    var bind = typeof port === 'string'
    ? 'Pipe '+port
    : 'Pipe '+port;

    // handle specific listen errors with friendly messages
    switch(error.code){
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event Listener for HTTP Server "listening" event
 */
function onListening(){
    var addr = server.address();
    var bind = typeof addr === "string"
    ? 'pipe '+addr
    : 'pipe '+addr.port;
    debug('Listening on '+ bind);
}